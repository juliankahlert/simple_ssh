name: Rust CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Rust toolchain using actions-rust-lang/setup-rust-toolchain
      - name: Set up Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      # Set up cross-compilation to musl target
      - name: Set up cross-compilation to musl
        run: |
          rustup target add x86_64-unknown-linux-musl
          rustup target add i686-unknown-linux-musl
          rustup target add aarch64-unknown-linux-musl
          rustup target add arm-unknown-linux-musleabihf
          export PATH="$HOME/.cargo/bin:$PATH"

      - name: Cache Cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache Cargo target
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-target-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-target-

      # Build the project for all musl targets
      - name: Build project for musl-amd64
        run: cargo build --release --target x86_64-unknown-linux-musl

      - name: Build project for musl-i686
        run: cargo build --release --target i686-unknown-linux-musl

      - name: Build project for musl-aarch64
        run: cargo build --release --target aarch64-unknown-linux-musl

      - name: Build project for musl-arm
        run: cargo build --release --target arm-unknown-linux-musleabihf

      # Build the project for this machine
      - name: Build project
        run: cargo build

      # Run tests
      - name: Run tests
        run: cargo test

      # Optionally, check formatting using rustfmt
      - name: Check formatting
        run: cargo fmt -- --check
